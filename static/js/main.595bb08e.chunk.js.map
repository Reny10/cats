{"version":3,"sources":["reducers.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","components/CounterButton.js","components/Header.js","containers/App.js","actions.js","constants.js","serviceWorker.js","index.js"],"names":["initialStateSearch","searchField","initialStateCats","cats","isPending","error","Card","name","email","id","className","src","alt","CardList","console","log","map","user","i","key","SearchBox","searchfield","searchChange","aria-label","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","info","this","setState","Component","CounterButton","updateCount","count","nextProps","nextState","color","onClick","Header","App","onRequestCats","onSearchChange","filteredCats","filter","cat","toLowerCase","includes","ErrorBoundry","connect","searchCats","requestCats","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","logger","createLogger","rootReducers","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.595bb08e.chunk.js","sourcesContent":["import { CHANGE_SEARCHFIELD,\r\n         REQUEST_CATS_PENDING,\r\n         REQUEST_CATS_SUCCESS,\r\n         REQUEST_CATS_FAILED } from './constants';\r\n\r\nconst initialStateSearch = {\r\n  searchField: ''\r\n}\r\nexport const searchCats = (state=initialStateSearch, action={}) => {\r\n  switch (action.type) {\r\n    case CHANGE_SEARCHFIELD:\r\n      return Object.assign({}, state, {searchField: action.payload})\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initialStateCats = {\r\n  cats: [],\r\n  isPending: false,\r\n  error: ''\r\n}\r\n\r\nexport const requestCats = (state=initialStateCats, action={}) => {\r\n  switch (action.type) {\r\n    case REQUEST_CATS_PENDING:\r\n      return Object.assign({}, state, {isPending: true})\r\n    case REQUEST_CATS_SUCCESS:\r\n      return Object.assign({}, state, {cats: action.payload, isPending: false})\r\n    case REQUEST_CATS_FAILED:\r\n      return Object.assign({}, state, {error: action.payload})\r\n    default:\r\n      return state\r\n  }\r\n}","import React from 'react';\r\n\r\nconst Card =({ name, email, id })=>{\r\nreturn(\r\n<div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n <img src={`https://robohash.org/set_set4/${id}/bgset_bg1/3.14159?size=200x200`}  alt='cats'/>\r\n<div>\r\n <h2>{name}</h2>\r\n <p>{email}</p>\r\n</div>\r\n</div>\r\n);\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport './cardlist.css';\r\n\r\nconst CardList = ({ cats }) => {\r\nconsole.log('CardList')\r\nreturn(\r\n<div className='card-list'> {\r\n  cats.map((user, i) => {\r\n  return ( <Card key={i} id={cats[i].id} name={cats[i].name} email={cats[i].email}/> );\r\n})\r\n}\r\n </div>\r\n );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\nconsole.log('SearchBox')\r\n  return (\r\n    <div className='pa2'>\r\n   <input aria-label='Search cats'\r\n          className='pa3 ba b--green bg-lightest-blue' type='search'\r\n          placeholder='Search cats'onChange={searchChange}/>\r\n    </div>\r\n  );\r\n}\r\nexport default SearchBox;\r\n\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default Scroll;\r\n","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  componentDidCatch (error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render () {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong.</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary","import React,{Component } from 'react';\r\n\r\nclass CounterButton extends Component{\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state={\r\n\t\tcount: 0\r\n    } }\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\tif (this.state.count !== nextState.count) {\r\n     return true;\r\n    }\r\n    return false;\r\n  \t}\r\n    updateCount = () => {\r\n    this.setState ( state => {\r\n    return {count:state.count + 1}\r\n    })\r\n    }\r\n\trender(){\r\n\treturn (\r\n\t<button id='counter' color={this.props.color} onClick={this.updateCount}>\r\n\tCount: {this.state.count}\r\n\t</button>  );\r\n\t}}\r\nexport default CounterButton;","import React,{ Component } from 'react';\r\nimport CounterButton from './CounterButton.js';\r\n\r\nclass Header extends Component{\r\n\r\n\t//shouldComponentUpdate(nextProps, nextState){\r\n    //return false }\r\n\r\n\trender(){\r\n\t\tconsole.log('Header')\r\n\t\treturn (\r\n\t\t\t<div><h1 className='f1'>Cats</h1>\r\n\t\t\t<CounterButton color={'red'}/>\r\n\t\t\t</div> \t);\r\n\t}}\r\nexport default Header;\r\n","import React,  {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { setSearchField, requestCats } from '../actions';\nimport CardList from '../components/CardList.js';\nimport SearchBox from '../components/SearchBox.js';\nimport Scroll from '../components/Scroll.js';\nimport ErrorBoundry from '../components/ErrorBoundry.js';\nimport Header from '../components/Header.js';\nimport { cats } from '../cats.js';\nimport './App.css';\n\n// parameter state comes from index.js provider store state(rootReducers)\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchCats.searchField,\n    cats: state.requestCats.cats,\n    isPending: state.requestCats.isPending,\n    error: state.requestCats.error\n    }\n    }\n\n// dispatch the DOM changes to call an action. note mapStateToProps returns object, mapDispatchToProps returns function\n// the function returns an object then uses connect to change the data from redecers.\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestCats: () => dispatch(requestCats())\n  }\n}\n\nclass App extends Component {\n\ncomponentDidMount() {\n    this.props.onRequestCats();\n  }\n\n   /*constructor(){\n    super()\n    this.state={\n  cats:cats\n  //searchfield:''\n  }}\n   /*componentDidMount() {\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=> response.json())\n      .then(users => {this.setState({ cats: users})});\n  }*/\n    //onSearchChange = (event) => {\n    //this.setState({ searchfield: event.target.value })}\n\n  render() {\n    const { searchField, onSearchChange, cats, isPending } = this.props;\n    const filteredCats = cats.filter(cat =>{\n      return cat.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return isPending?\n     <h1>Loading</h1>:\n    (\n    <div className='tc'>\n    <Header/>\n    <SearchBox searchChange={onSearchChange}/>\n    <Scroll>\n    <ErrorBoundry>\n    <CardList cats= {filteredCats} />\n    </ErrorBoundry>\n    </Scroll>\n    </div>\n     );\n}}\nexport default connect(mapStateToProps, mapDispatchToProps) (App);","import { CHANGE_SEARCHFIELD,\r\n         REQUEST_CATS_PENDING,\r\n         REQUEST_CATS_SUCCESS,\r\n         REQUEST_CATS_FAILED } from './constants'\r\n\r\nexport const setSearchField = (text) => ({ type: CHANGE_SEARCHFIELD, payload: text })\r\n\r\nexport const requestCats = () => (dispatch) => {\r\n  dispatch({ type: REQUEST_CATS_PENDING })\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n   .then(response=> response.json())\r\n   .then(data => dispatch({ type: REQUEST_CATS_SUCCESS, payload: data }))\r\n   .catch(error => dispatch({ type: REQUEST_CATS_FAILED, payload: error }))\r\n}\r\n\r\n","export const CHANGE_SEARCHFIELD = 'CHANGE_SEARCHFIELD';\r\n\r\nexport const REQUEST_CATS_PENDING = 'REQUEST_CATS_PENDING';\r\nexport const REQUEST_CATS_SUCCESS = 'REQUEST_CATS_SUCCESS';\r\nexport const REQUEST_CATS_FAILED = 'REQUEST_CATS_FAILED';\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport { searchCats, requestCats } from './reducers'\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nconst logger = createLogger();\nconst rootReducers = combineReducers({requestCats, searchCats})\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App/>\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}